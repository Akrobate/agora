# https://davidgarcia.dev/posts/how-to-split-open-api-spec-into-multiple-files/
# https://nordicapis.com/7-open-source-openapi-documentation-generators/
openapi: 3.0.0
info:
  title: Agora
  version: '0.1'
servers:
  -
    url: http://localhost
    description: Local servcer
paths:

  /api/v1/users/login:
    post:
      summary: Login method returns auth token
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
              required:
                - login
                - password
      responses:
        200:
          description: Return the security jwt token
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
        401:
          description: Not authorized

  /api/v1/users/register:
    get:
      summary: Get types
      tags:
        - user
      responses:
        200:
          description: Return Array of results
          content:
            application/json:
              schema:
                type: object
                properties:
                  news_type_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/SomeType'
        401:
          description: Not authorized
      security:
        - bearer: []

  /api/v1/users:
    get:
      summary: Get types
      tags:
        - meta
      responses:
        200:
          description: Return Array of results
          content:
            application/json:
              schema:
                type: object
                properties:
                  some_type_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/SomeType'
        401:
          description: Not authorized
      security:
        - bearer: []

  /api/v1/users/login/guest:

  /api/v1/users/token/renew:

  /api/v1/users/:user_id:

  /api/v1/campaigns:

  /api/v1/campaigns/:campaign_id:


  /api/v1/campaigns/:campaign_id/proposition-results:

  /api/v1/campaigns/:campaign_id/users/:campaign_user_id:

  /api/v1/campaigns/:campaign_id/users:

  /api/v1/campaigns/:campaign_id/users/:campaign_user_id/invite:
  /api/v1/campaigns/:campaign_id/propositions:
  /api/v1/campaigns/:campaign_id/propositions/:proposition_id:
  /api/v1/campaigns/:campaign_id/status:
  /api/v1/campaigns/:campaign_id/init-ranking:
  /api/v1/campaigns/:campaign_id/update-ranking:
  /api/v1/campaigns/:campaign_id/own-proposition-results:
  /api/v1/campaigns/:campaign_id/init-elo-ranking:
  /api/v1/campaigns/:campaign_id/elo-duel-result:
  /api/v1/campaigns/:campaign_id/elo-ranking:
  /api/v1/campaigns/:campaign_id/elo-random-propositions:

components:

  securitySchemes:
    bearer:
      scheme: bearer
      type: http
      bearerFormat: JWT

  schemas:
    SomeType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string